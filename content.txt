git init #初始化仓库
git add <file> 添加文件，可多次多个
git commit -m <message> 注释

git status 掌握工作区状态
git diff 查看修改

head 指向当前版本 git reset --hard commit_id
git log 可以查看历史
git reflog 查看命令历史

git 跟踪改变而不是文件

git checkout -- file 可以撤回工作区最近的操作。
git reset HEAD <file> 允许撤回暂存区
git reset HEAD <file> 允许回退版本库

git rm 可以删除一个文件。
如果误删除，可以用git checkout 来恢复到最新版本（版本库）

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone <link>命令克隆。
Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。


查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>


Git分支十分强大，在团队开发中应该充分应用。
合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。
